{"version":3,"sources":["components/Home.js","components/Write.js","components/Navbar.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","react_default","a","createElement","id","className","role","aria-label","react_router_dom","to","href","Write","placeholder","type","withRouter","msg","location","pathname","Footer","viewer","axios","require","App","state","view","_this2","this","post","token","then","response","setState","Navbar","react_router","exact","path","component","React","Component","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7db84037.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\n// import NavBar from './Navbar_Home';\nexport default function Home(props){\n    return (<div>\n        <div id=\"first\" className=\"row\">\n            <div className=\"col s12 m6 right text-fluid\">\n                <h2>Is something nagging you lately?</h2>\n                <h4>Do you feel like yelling out something that's \n                    worrying you, but you can confess it to anyone?\n                </h4>\n                <h3>Well, we got your back! <span role=\"img\" aria-label=\"Smiley\">&#x1F604;</span> </h3>\n            </div>\n        </div>\n        <div id=\"second\" className=\"row\">\n            <div className=\"col s12 m6 left text-fluid\">\n                <h2>Opening up really helps!</h2>\n                <h5>One of the best ways to cope up with depression and mental trauma\n                    is speak your heart out. It's always better to have a talk with your \n                    nearest counsellor. We understand that there are things you may\n                    <b> hesitate to talk about</b>. You can speak up <Link to=\"/write\">here</Link>.\n                </h5>\n                <h4>We promise we won't tell anyone <span role=\"img\" aria-label=\"Hush\">&#x1F92B;</span></h4>\n            </div>\n        </div>\n        <div id=\"third\" className=\"row\">\n            <div className=\"col s12 m6 right text-fluid\">\n                <h2>Privacy is the key</h2>\n                <h5>We will never track you down. We will never share your deepest secrets with anyone else.*<br />\n                    We don't ask your name or address. We only keep the confession and usage statistics \n                    for data analytics, so that in future we can suggest you ways to improve your mood.\n                </h5>\n                <small>*We believe you will not share plans that threaten fellow beings.</small>\n                <h4>You can count on us.</h4>\n            </div>\n        </div>\n        <div id=\"fourth\" className=\"row\">\n            <div className=\"col s12 m6 left text-fluid\">\n                <h2><a href=\"https://www.youtube.com/watch?v=BWf-eARnf6U\">Heal The World</a> - that's our motto</h2>\n                <h5>\n                    We got the inspiration for the creation of this app from this <a href=\"https://medium.com/@shastrarth.iitkgp/iit-kharagpur-undergraduate-mental-health-survey-196082ef67db?fbclid=IwAR31n9eFsmnm891iQKTJi9G_QMaCMNrP_VxvzHd42uWaTteTdvDUncHd_hY\">\n                    article</a>. We felt the urge to do something for the betterment of this condition. If you feel like so, consider contributing to <a href=\"github.com/grapheo12\">our Github repo</a>.\n                </h5>\n                <h4><a href=\"https://en.wikipedia.org/wiki/Free_and_open-source_software\">FOSS</a> for a better tomorrow!</h4>\n            </div>\n        </div>\n    </div>);\n}","import React from 'react';\n\nexport default function Write(props){\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col s12 input-field\">\n                    <textarea id=\"confession\" className=\"materialize-textarea yellow lighten-3\" placeholder=\"Pour your hearts out here.....\"></textarea>\n                    <div className=\"switch\">\n                        <label>\n                        <span>I feel a sense of relief now.</span>\n                        <input id=\"relief\" type=\"checkbox\" />\n                        <span className=\"lever\"></span>\n                        </label>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nfunction NavBar(props){\n    let msg = props.location.pathname === '/' ? (\n        <Link to=\"/write\" id=\"button\" className=\"waves-effect waves-light btn white black-text\">Write</Link>\n    ) : (\n        <Link to=\"#\" id=\"button\" className=\"waves-effect waves-light btn white black-text\">Submit</Link>\n    );\n\n    return (\n        <nav>\n            <div className=\"nav-wrapper green darken-1\">\n            <Link to=\"/\" className=\"brand-logo\">Fess</Link>\n            <ul id=\"nav-mobile\" className=\"right\">\n                <li>{ msg }</li>\n            </ul>\n            </div>\n        </nav>\n    );\n}\n\nexport default withRouter(NavBar);","import React from 'react';\n\nexport default function Footer(props){\n    return(\n        <footer className=\"page-footer black white-text\">\n            <div className=\"container\">\n                <h3>Thanks for being our viewer #{ props.viewer }.</h3>\n                <p>Brought to you with <span className=\"red-text\">&hearts;</span> by <b><a href=\"grapheo12.github.io\">Shubham Mishra</a></b></p>\n                <small>Images and logo taken from <a href=\"unsplash.com\">Unsplash</a> and <a href=\"pngtree.com\">Pngtree</a> respectively.</small>\n             </div>\n        </footer>\n    );\n}","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport Home from './components/Home'\nimport Write from './components/Write'\nimport NavBar from './components/Navbar';\nimport Footer from './components/Footer';\n\nconst axios = require('axios');\n\nclass App extends React.Component {\n  state = {\n    view: 1\n  }\n\n  componentDidMount(){\n    axios.post('/rest/view', { token: 'secret' })\n      .then((response) => {\n        this.setState({view: response});\n      });\n  }\n\n  render(){\n    return (\n      <BrowserRouter>\n        <header>\n          <NavBar />\n        </header>\n        <main>\n          <Route exact path=\"/\" component={ Home } />\n          <Route path=\"/write\" component={ Write } />\n        </main>\n        <footer>\n          <Footer viewer={ this.state.view } />\n        </footer>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}